package APCD;

import business.UserBusiness;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import util.Utils;
import xml.Users;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class TableOfMeasurements extends javax.swing.JFrame {

    /**
     * Creates new form TableOfMeasurements
     */
   
    private static TableOfMeasurements instance;
    private TableOfMeasurements() {
        initComponents();
        initForm();
        
    }
    
    public static TableOfMeasurements getInstance()
    {
        if(instance == null)
        {
            instance = new TableOfMeasurements();
        }
        
        return instance;
    
    }

    private void initForm() {
        Utils.initializeForm(this);
        loadData();
        initializeDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        ExitMeasurTabel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        measrementTable = new javax.swing.JTable();
        nameLabel = new javax.swing.JLabel();
        sendMail = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Measurement view");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/infoPic.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ExitMeasurTabel.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        ExitMeasurTabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        ExitMeasurTabel.setToolTipText("Back");
        ExitMeasurTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMeasurTabelActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apc diabetic2.png"))); // NOI18N

        measrementTable.setAutoCreateRowSorter(true);
        measrementTable.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        measrementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A_sleep", null, null, null, null, null, null, null},
                {"Breackfast", null, null, null, null, null, null, null},
                {"Lunch", null, null, null, null, null, null, null},
                {"Diner", null, null, null, null, null, null, null},
                {"B_Sleep", null, null, null, null, null, null, null},
                {"Sudn_Drop", null, null, null, null, null, null, null}
            },
            new String [] {
                " ", "Saturday", "Sunday", "Monday ", "Tuesday ", "Wednesday ", "Thursday", "Friday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        measrementTable.setSelectionBackground(new java.awt.Color(50, 178, 233));
        jScrollPane1.setViewportView(measrementTable);

        nameLabel.setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        nameLabel.setText("NAME");

        sendMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Mail.png"))); // NOI18N
        sendMail.setToolTipText("Send to Email");
        sendMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(nameLabel)
                                .addGap(0, 457, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ExitMeasurTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendMail, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(nameLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitMeasurTabel)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sendMail, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMeasurTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMeasurTabelActionPerformed
        DailyMeasurement dm =  DailyMeasurement.getInstance();
        dm.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_ExitMeasurTabelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sendMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMailActionPerformed
        // TODO add your handling code here:
        Utils.fireEmail(Utils.currentLoginUser.getEmail(), userBusiness.prepareUserDetailsString());
        
    }//GEN-LAST:event_sendMailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExitMeasurTabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable measrementTable;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton sendMail;
    // End of variables declaration//GEN-END:variables

    UserBusiness userBusiness = new UserBusiness();

    Map<Integer, Users.UserInfo.DailyMeasurement> extractLastSevenDailyMeasurements;

    private void loadData() {

        extractLastSevenDailyMeasurements = userBusiness.extractLastSevenDailyMeasurements();
        
        nameLabel.setText( (Utils.currentLoginUser.getName()!=null) ?Utils.currentLoginUser.getName() : ""  );

    }

    private void initializeDataTable() {
        List<String> columns = Arrays.asList(Utils.times);
        List<String[]> values = new ArrayList<String[]>();

        for (int day : extractLastSevenDailyMeasurements.keySet()) {
            Users.UserInfo.DailyMeasurement data = extractLastSevenDailyMeasurements.get(day);
            List<String> rowData = new ArrayList();
            
            rowData.add(Utils.weekDays[day]);
            if(data == null)
            {   
                data = new  Users.UserInfo.DailyMeasurement();
            }
            rowData.addAll(Arrays.asList(data.getDataAsStringArray()));
            
           values.add( rowData.toArray(new String[rowData.size()]));

            
        }
        TableModel tableModel = new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
measrementTable.setModel(tableModel);
        System.out.println();
    }
    
}
